-- MySQL Script generated by MySQL Workbench
-- Mon Mar  1 00:00:41 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- 
-- hgklgh
-- 
-- 

-- -----------------------------------------------------
-- Schema mydb
--
-- 
-- hgklgh
-- 
-- 
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `new_schema1` ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Client` (
  `idClient` INT NOT NULL,
  `nom` VARCHAR(45) NULL,
  `prenom` VARCHAR(45) NULL,
  `adr` VARCHAR(45) NULL,
  `mdp` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`idClient`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `iduser` INT NOT NULL,
  `mdp_user` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`mdp_user`, `iduser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`produit` (
  `idproduit` INT NOT NULL,
  `libart` VARCHAR(45) NULL,
  `prix` VARCHAR(45) NULL,
  `quantite` VARCHAR(45) NULL,
  `photo_art` VARCHAR(45) NULL,
  PRIMARY KEY (`idproduit`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`facture`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`facture` (
  `idfacture` INT NOT NULL,
  `date_facture` DATE NULL,
  PRIMARY KEY (`idfacture`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`panier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`panier` (
  `idpanier` INT NOT NULL,
  PRIMARY KEY (`idpanier`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`table1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`table1` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`recoivir`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`recoivir` (
  `Client_idClient` INT NOT NULL,
  `facture_idfacture` INT NOT NULL,
  PRIMARY KEY (`Client_idClient`, `facture_idfacture`),
  INDEX `fk_Client_has_facture_facture1_idx` (`facture_idfacture` ASC) VISIBLE,
  INDEX `fk_Client_has_facture_Client_idx` (`Client_idClient` ASC) VISIBLE,
  CONSTRAINT `fk_Client_has_facture_Client`
    FOREIGN KEY (`Client_idClient`)
    REFERENCES `mydb`.`Client` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Client_has_facture_facture1`
    FOREIGN KEY (`facture_idfacture`)
    REFERENCES `mydb`.`facture` (`idfacture`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`comprendre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`comprendre` (
  `produit_idproduit` INT NOT NULL,
  `facture_idfacture` INT NOT NULL,
  `qte` INT NULL,
  PRIMARY KEY (`produit_idproduit`, `facture_idfacture`),
  INDEX `fk_produit_has_facture_facture1_idx` (`facture_idfacture` ASC) VISIBLE,
  INDEX `fk_produit_has_facture_produit1_idx` (`produit_idproduit` ASC) VISIBLE,
  CONSTRAINT `fk_produit_has_facture_produit1`
    FOREIGN KEY (`produit_idproduit`)
    REFERENCES `mydb`.`produit` (`idproduit`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produit_has_facture_facture1`
    FOREIGN KEY (`facture_idfacture`)
    REFERENCES `mydb`.`facture` (`idfacture`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`comporter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`comporter` (
  `produit_idproduit` INT NOT NULL,
  `panier_idpanier` INT NOT NULL,
  `qte` INT NULL,
  PRIMARY KEY (`produit_idproduit`, `panier_idpanier`),
  INDEX `fk_produit_has_panier_panier1_idx` (`panier_idpanier` ASC) VISIBLE,
  INDEX `fk_produit_has_panier_produit1_idx` (`produit_idproduit` ASC) VISIBLE,
  CONSTRAINT `fk_produit_has_panier_produit1`
    FOREIGN KEY (`produit_idproduit`)
    REFERENCES `mydb`.`produit` (`idproduit`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produit_has_panier_panier1`
    FOREIGN KEY (`panier_idpanier`)
    REFERENCES `mydb`.`panier` (`idpanier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `new_schema1` ;
USE `new_schema1` ;

-- -----------------------------------------------------
-- Placeholder table for view `new_schema1`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `new_schema1`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `new_schema1`.`view1`;
USE `new_schema1`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
